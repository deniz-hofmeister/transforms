name: tests

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1

      - name: Install Rust nightly + rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Run rustfmt
        id: rustfmt
        run: |
          cargo fmt --all -- --check 2>&1 | tee reviewdog-report.log
          # Don't exit so that we have a chance to annotate with reviewdog.
        continue-on-error: true

      - name: Review with reviewdog
        if: always() 
        uses: reviewdog/action-reviewdog@v2
        with:
          reporter: 'github-pr-check'
          fail_on_error: false
          filter_mode: 'diff_context'
          tool_name: 'rustfmt'
          level: 'error'
          input_file: 'reviewdog-report.log'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test
      - name: Run tests async
        run: cargo test --features async -- async
      - name: Run example sync_minimal
        run: cargo run --example sync_minimal
      - name: Run example sync_polling
        run: cargo run --example sync_polling
      - name: Run example async_await
        run: cargo run --example async_await --features async
      - name: Run example full_example
        run: cargo run --example full_example
      - name: Run bench
        run: cargo bench
      - name: Run bench async
        run: cargo bench --features async
